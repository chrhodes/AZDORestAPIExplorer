<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"    
>
    
   
    <!-- This is used to make the design experience better -->
    <Style x:Key="vncDesignStyleUC" TargetType="UserControl">
        <Setter Property="Background" Value="White" />
    </Style>

    <Style x:Key="vncDesignStyleW" TargetType="Window">
        <Setter Property="Background" Value="White" />
    </Style>
    
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

    <SolidColorBrush x:Key="FriendMainBackground" Color="#F04040" />
    <SolidColorBrush x:Key="FriendNavigationBackground" Color="#F08040" />
    <SolidColorBrush x:Key="FriendMeetingDetailBackground" Color="#F0C040" />
    <SolidColorBrush x:Key="FriendDetailBackground" Color="#F0E040" />

    <SolidColorBrush x:Key="OrganizationColor" Color="Violet" />
    <SolidColorBrush x:Key="ProcessColor" Color="LightGreen" />
    <SolidColorBrush x:Key="ProjectColor" Color="LightBlue" />
    <SolidColorBrush x:Key="TeamColor" Color="LightSalmon" />

    <SolidColorBrush x:Key="BuildColor" Color="#FF00FF00" />
    <SolidColorBrush x:Key="DefinitionColor" Color="#FF0000FF" />
    
    <SolidColorBrush x:Key="RepositoryColor" Color="#FFFF6400" />
    <SolidColorBrush x:Key="PullRequestColor" Color="#FF6400" />
    <SolidColorBrush x:Key="CommitColor" Color="#FFB64700" />
    <SolidColorBrush x:Key="TestColor" Color="#FFB6007B" />
    <SolidColorBrush x:Key="WorkItemTypeColor" Color="#FFA68ADE" />

    <Style x:Key="DragableLayoutPanel" TargetType="{x:Type dxdo:LayoutPanel}">
        <!--<Setter Property="ShowPinButton" Value="False" />-->
        <Setter Property="AllowClose" Value="False" />
        <Setter Property="AllowDrag" Value="True" />
    </Style>
    
    <Style x:Key="HiddenDragableLayoutPanel" TargetType="{x:Type dxdo:LayoutPanel}">
        <!--<Setter Property="ShowPinButton" Value="False" />-->
        <Setter Property="AllowClose" Value="False" />
        <Setter Property="AllowDrag" Value="True" />
        <Setter Property="AutoHidden" Value="True" />
    </Style>

    <Style x:Key="NotDragableLayoutPanel" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="ShowPinButton" Value="False" />
        <Setter Property="AllowClose" Value="False" />
        <Setter Property="AllowDrag" Value="False" />
    </Style>

    <Style x:Key="GetLayoutGroup" TargetType="{x:Type dxlc:LayoutGroup}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsCollapsible" Value="True" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="View" Value="GroupBox" />
    </Style>

    <Style x:Key="ContextLayoutGroup" TargetType="{x:Type dxlc:LayoutGroup}">
        <Setter Property="View" Value="GroupBox" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ItemLabelsAlignment" Value="Local" />
        <Setter Property="IsCollapsible" Value="True" />
        <Setter Property="IsCollapsed" Value="False" />
    </Style>

    <Style x:Key="OutlineBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
    </Style>
    
    <Style x:Key="CountBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="CountTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black" />
        <!--<Setter Property="FontSize" Value="18" />-->
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>
    
    <Style x:Key="CountStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="-3,-5,-2,-3" />
    </Style>

    <Style x:Key="SelectableText" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="Background" Value="#FFE1FFE1" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <TextBlock FontSize="12" Foreground="Red"
                                   Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=placeholder}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridColumnStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridEditingColumnStyle" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>